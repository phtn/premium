import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";

export default defineSchema({
  admin: defineTable({
    account_id: v.string(),
    email: v.string(),
    is_active: v.boolean(),
    is_verified: v.boolean(),
    level: v.float64(),
    name: v.string(),
    phone_number: v.string(),
    photo_url: v.string(),
    rank: v.string(),
    type: v.string(),
    uid: v.string(),
    updated_at: v.float64(),
    created_by: v.string(),
  }),
  users: defineTable({
    account_id: v.string(),
    email: v.string(),
    is_active: v.boolean(),
    is_verified: v.boolean(),
    level: v.float64(),
    name: v.string(),
    phone_number: v.string(),
    photo_url: v.string(),
    rank: v.string(),
    type: v.string(),
    uid: v.string(),
    updated_at: v.float64(),
  }).index("by_uid", ["uid", "email", "photo_url", "phone_number"]),

  products: defineTable({
    product_id: v.string(),
    category_id: v.string(),
    created_by: v.string(),
    name: v.string(),
    description: v.optional(v.string()),
    image_list_id: v.optional(v.string()),
    slug: v.optional(v.string()),
    remarks: v.optional(v.string()),
    short_desc: v.optional(v.string()),
    material: v.optional(v.string()),
    is_live: v.boolean(),
    price: v.number(),
    in_stock: v.number(),
    is_active: v.boolean(),
    dimensions: v.optional(v.string()),
    dimensions_unit: v.optional(v.string()),
    count: v.optional(v.number()),
    count_unit: v.optional(v.string()),
    weight: v.optional(v.string()),
    weight_unit: v.optional(v.string()),
    size: v.optional(v.string()),
    size_unit: v.optional(v.string()),
    volume: v.optional(v.string()),
    volume_unit: v.optional(v.string()),
    photo_url: v.optional(v.string()),
    usage: v.optional(v.string()),
    category: v.optional(v.string()),
    subcategory: v.optional(v.string()),
    brand: v.optional(v.string()),
    updated_at: v.float64(),
    updated_by: v.string(),
  }).index("by_product_id", [
    "product_id",
    "name",
    "short_desc",
    "price",
    "in_stock",
    "category",
  ]),

  categories: defineTable({
    category_id: v.string(),
    created_by: v.string(),
    name: v.string(),
    slug: v.optional(v.string()),
    description: v.optional(v.string()),
    photo_url: v.optional(v.string()),
    is_live: v.boolean(),
    is_active: v.boolean(),
    remarks: v.optional(v.string()),
    updated_at: v.float64(),
    updated_by: v.string(),
  }).index("by_category_id", [
    "category_id",
    "name",
    "description",
    "slug",
    "is_active",
  ]),
});
